name: "dreamwaltz-static"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "random-camera-datamodule"
data:
  batch_size: [1, 1]
  width: [256, 512]
  height: [256, 512]
  resolution_milestones: [5000]
  camera_distance_range: [1.0, 1.5]
  fovy_range: [40, 70]
  elevation_range: [-10, 45]
  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.
  light_sample_strategy: "dreamfusion"
  eval_camera_distance: 1.5
  eval_fovy_deg: 70.

system_type: "dreamwaltz-system"
system:
  warmup_steps: 2000
  prior_path: "custom/threestudio-dreamwaltz/load/priors/smpl_apose.obj"
  prior_radius: 0.7
  prior_rotate: "threestudio"
  prior_view_hw: [512, 512]
  controlnet_ref_types: ["rgb"]

  geometry_type: "implicit-volume"
  geometry:
    radius: 1.0
    normal_type: null
    # normal_type: "analytic"

    # use Magic3D density initialization instead
    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5

    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096

  # material_type: "diffuse-with-point-light-material"
  # material:
  #   ambient_only_steps: 5001
  #   albedo_activation: sigmoid

  material_type: "no-material"
  material:
    n_output_dims: 3
    color_activation: sigmoid

  background_type: "neural-environment-map-background"
  background:
    color_activation: sigmoid
    random_aug: true

  renderer_type: "nerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 512

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    prompt: ???
    front_threshold: 30.
    back_threshold: 30.

  guidance_type: "multi-controlnet-guidance"
  guidance:
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    guidance_scale: 100.
    weighting_strategy: sds
    min_step_percent: 0.02
    max_step_percent: 0.98

    controlnet_preprocessors: ["openpose"]
    controlnet_processors: ["lllyasviel/control_v11p_sd15_openpose"]
    controlnet_cond_scales: [1.0]

    # control_preprocessors options are:
    # ["canny", "depth_leres", "depth_leres++", "depth_midas", "lineart_anime",
    #  "lineart_coarse", "lineart_realistic", "mediapipe_face", "mlsd", "normal_bae",
    #  "openpose", "openpose_face", "openpose_faceonly", "openpose_full", "openpose_hand",
    #  "scribble_hed, "scribble_pidinet", "shuffle", "softedge_hed", "softedge_hedsafe",
    #  "softedge_pidinet", "softedge_pidsafe", null]

    # control_processors options are: "lllyasviel/" +
    # ["control_v11p_sd15_canny", "control_v11p_sd15_mlsd", "control_v11f1p_sd15_depth",
    #  "control_v11p_sd15_normalbae", "control_v11p_sd15_seg", "control_v11p_sd15_inpaint",
    #  "control_v11p_sd15_lineart", "control_v11p_sd15s2_lineart_anime", "control_v11p_sd15_openpose",
    #  "control_v11p_sd15_scribble", "control_v11p_sd15_softedge", "control_v11e_sd15_shuffle",
    #  "control_v11e_sd15_ip2p", "control_v11f1e_sd15_tile"]
  
  freq:
    guidance_eval: 200

  loggers:
    wandb:
      enable: false
      project: "threestudio"
      name: None

  loss:
    lambda_l2: 1000.  # for warmup
    lambda_sds: 1.
    lambda_orient: 0.
    lambda_sparsity: 10.
    lambda_opaque: [10000, 0.0, 1000.0, 10001]
    lambda_z_variance: 0.
  optimizer:
    name: AdamW
    args:
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry.encoding:
        lr: 0.01
      geometry.density_network:
        lr: 0.001
      geometry.feature_network:
        lr: 0.001
      background:
        lr: 0.001

trainer:
  max_steps: 20000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 200
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}